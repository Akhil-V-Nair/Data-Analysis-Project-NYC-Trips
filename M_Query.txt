let
    Source = Sql.Database("LAPTOP-31M4HS7A", "Project"),
    dbo_all_trips = Source{[Schema="dbo",Item="all_trips"]}[Data],
    #"Filtered Rows" = Table.SelectRows(dbo_all_trips, each true),
    #"Replaced Value" = Table.ReplaceValue(#"Filtered Rows","","0",Replacer.ReplaceValue,{"congestion_surcharge"}),
    #"Filtered Rows1" = Table.SelectRows(#"Replaced Value", each true),
    #"Filtered Rows2" = Table.SelectRows(#"Filtered Rows1", each ([trip_distance] <> "0") and ([fare_amount] <> "0")),
    #"Replaced Value1" = Table.ReplaceValue(#"Filtered Rows2","0.0","1.0",Replacer.ReplaceText,{"passenger_count"}),
    #"Removed Columns" = Table.RemoveColumns(#"Replaced Value1",{"Column 0"}),
    #"Changed Type" = Table.TransformColumnTypes(#"Removed Columns",{{"lpep_pickup_datetime", type datetime}, {"lpep_dropoff_datetime", type datetime}}),
    #"Filtered Rows3" = Table.SelectRows(#"Changed Type", each true),
    #"Changed Type1" = Table.TransformColumnTypes(#"Filtered Rows3",{{"PULocationID", Int64.Type}, {"DOLocationID", Int64.Type}, {"passenger_count", Int64.Type}, {"trip_distance", type number}, {"fare_amount", type number}, {"extra", type number}, {"mta_tax", type number}, {"tip_amount", type number}, {"tolls_amount", type number}, {"improvement_surcharge", type number}}),
    #"Filtered Rows4" = Table.SelectRows(#"Changed Type1", each true),
    #"Changed Type2" = Table.TransformColumnTypes(#"Filtered Rows4",{{"congestion_surcharge", type number}}),
    #"Filtered Rows5" = Table.SelectRows(#"Changed Type2", each [lpep_pickup_datetime] >= #datetime(2017, 1, 1, 0, 0, 0) and [lpep_pickup_datetime] <= #datetime(2020, 12, 31, 0, 0, 0)),
    #"Filtered Rows6" = Table.SelectRows(#"Filtered Rows5", each [lpep_dropoff_datetime] >= #datetime(2017, 1, 1, 0, 0, 0) and [lpep_dropoff_datetime] <= #datetime(2020, 12, 31, 0, 0, 0)),
    #"Added Custom" = Table.AddColumn(#"Filtered Rows6", "c_lpep_pickup_datetime", each if [lpep_pickup_datetime] > [lpep_dropoff_datetime] then 
[lpep_dropoff_datetime] else [lpep_pickup_datetime]),
    #"Changed Type3" = Table.TransformColumnTypes(#"Added Custom",{{"c_lpep_pickup_datetime", type datetime}}),
    #"Added Custom1" = Table.AddColumn(#"Changed Type3", "c_lpep_dropoff_datetime", each if [lpep_dropoff_datetime] < [lpep_pickup_datetime] then 
[lpep_pickup_datetime] else [lpep_dropoff_datetime]),
    #"Changed Type4" = Table.TransformColumnTypes(#"Added Custom1",{{"c_lpep_dropoff_datetime", type datetime}}),
    #"Removed Columns1" = Table.RemoveColumns(#"Changed Type4",{"lpep_pickup_datetime", "lpep_dropoff_datetime"}),
    #"Reordered Columns" = Table.ReorderColumns(#"Removed Columns1",{"VendorID", "c_lpep_pickup_datetime", "c_lpep_dropoff_datetime", "store_and_fwd_flag", "RatecodeID", "PULocationID", "DOLocationID", "passenger_count", "trip_distance", "fare_amount", "extra", "mta_tax", "tip_amount", "tolls_amount", "improvement_surcharge", "total_amount", "payment_type", "trip_type", "congestion_surcharge"}),
    #"Inserted Time Subtraction" = Table.AddColumn(#"Reordered Columns", "Subtraction", each [c_lpep_dropoff_datetime] - [c_lpep_pickup_datetime], type duration),
    #"Renamed Columns" = Table.RenameColumns(#"Inserted Time Subtraction",{{"Subtraction", "duration"}}),
    #"Reordered Columns1" = Table.ReorderColumns(#"Renamed Columns",{"VendorID", "c_lpep_pickup_datetime", "c_lpep_dropoff_datetime", "duration", "store_and_fwd_flag", "RatecodeID", "PULocationID", "DOLocationID", "passenger_count", "trip_distance", "fare_amount", "extra", "mta_tax", "tip_amount", "tolls_amount", "improvement_surcharge", "total_amount", "payment_type", "trip_type", "congestion_surcharge"}),
    #"Filtered Rows7" = Table.SelectRows(#"Reordered Columns1", each [duration] < #duration(1, 0, 0, 0)),
    #"Added Custom2" = Table.AddColumn(#"Filtered Rows7", "Custom", each if [fare_amount] <0 and [extra] <0 and [mta_tax] <0 and 
[improvement_surcharge] <0 and [congestion_surcharge] <0 
then "all negative" else "ok"),
    #"Renamed Columns1" = Table.RenameColumns(#"Added Custom2",{{"Custom", "negative_charges"}}),
    #"Replaced Value2" = Table.ReplaceValue(#"Renamed Columns1",each [fare_amount],each if [negative_charges] = "all negative" then [fare_amount] *-1 else [fare_amount],Replacer.ReplaceValue,{"fare_amount"}),
    #"Replaced Value3" = Table.ReplaceValue(#"Replaced Value2",each [extra],each if [negative_charges] = "all negative" then [extra] *-1 else [extra],Replacer.ReplaceValue,{"extra"}),
    #"Replaced Value4" = Table.ReplaceValue(#"Replaced Value3",each [mta_tax],each if [negative_charges] = "all negative" then [mta_tax] *-1 else [mta_tax],Replacer.ReplaceValue,{"mta_tax"}),
    #"Replaced Value5" = Table.ReplaceValue(#"Replaced Value4",each [improvement_surcharge],each if [negative_charges] = "all negative" then [improvement_surcharge] *-1 else [improvement_surcharge],Replacer.ReplaceValue,{"improvement_surcharge"}),
    #"Replaced Value6" = Table.ReplaceValue(#"Replaced Value5",each [congestion_surcharge],each if [negative_charges] = "all negative" then [congestion_surcharge] *-1 else [congestion_surcharge],Replacer.ReplaceValue,{"congestion_surcharge"}),
    #"Replaced Value7" = Table.ReplaceValue(#"Replaced Value6",each [trip_distance],each if [trip_distance] = 0 and [fare_amount] > 0 then (( 
    [fare_amount] - 2.5)/2.5) else [trip_distance],Replacer.ReplaceValue,{"trip_distance"}),
    #"Replaced Value8" = Table.ReplaceValue(#"Replaced Value7",each [fare_amount],each if [fare_amount] = 0 and [trip_distance] > 0 then (
    2.5 + ([trip_distance]*2.5)) else [fare_amount],Replacer.ReplaceValue,{"fare_amount"}),
    #"Removed Columns2" = Table.RemoveColumns(#"Replaced Value8",{"VendorID"}),
    #"Changed Type5" = Table.TransformColumnTypes(#"Removed Columns2",{{"trip_distance", type number}, {"fare_amount", Currency.Type}, {"extra", Currency.Type}, {"mta_tax", Currency.Type}, {"tip_amount", Currency.Type}, {"tolls_amount", Currency.Type}, {"improvement_surcharge", Currency.Type}, {"total_amount", Currency.Type}, {"congestion_surcharge", Currency.Type}}),
    #"Inserted Date" = Table.AddColumn(#"Changed Type5", "Date", each DateTime.Date([c_lpep_pickup_datetime]), type date),
    #"Renamed Columns2" = Table.RenameColumns(#"Inserted Date",{{"Date", "pickup_date"}}),
    #"Inserted Date1" = Table.AddColumn(#"Renamed Columns2", "Date", each DateTime.Date([c_lpep_dropoff_datetime]), type date),
    #"Renamed Columns3" = Table.RenameColumns(#"Inserted Date1",{{"Date", "dropoff_date"}}),
    #"Inserted Time" = Table.AddColumn(#"Renamed Columns3", "Time", each DateTime.Time([c_lpep_pickup_datetime]), type time),
    #"Renamed Columns4" = Table.RenameColumns(#"Inserted Time",{{"Time", "pickup_time"}}),
    #"Inserted Time1" = Table.AddColumn(#"Renamed Columns4", "Time", each DateTime.Time([c_lpep_dropoff_datetime]), type time),
    #"Renamed Columns5" = Table.RenameColumns(#"Inserted Time1",{{"Time", "dropoff_time"}}),
    #"Inserted Start of Hour" = Table.AddColumn(#"Renamed Columns5", "Start of Hour", each Time.StartOfHour([c_lpep_pickup_datetime]), type datetime),
    #"Renamed Columns6" = Table.RenameColumns(#"Inserted Start of Hour",{{"Start of Hour", "pickup_hour"}}),
    #"Inserted Hour" = Table.AddColumn(#"Renamed Columns6", "Hour", each Time.Hour([c_lpep_dropoff_datetime]), Int64.Type),
    #"Renamed Columns7" = Table.RenameColumns(#"Inserted Hour",{{"Hour", "dropoff_hour"}}),
    #"Removed Columns3" = Table.RemoveColumns(#"Renamed Columns7",{"pickup_hour"}),
    #"Inserted Hour1" = Table.AddColumn(#"Removed Columns3", "Hour", each Time.Hour([c_lpep_pickup_datetime]), Int64.Type),
    #"Renamed Columns8" = Table.RenameColumns(#"Inserted Hour1",{{"Hour", "pickup_hour"}}),
    #"Removed Columns4" = Table.RemoveColumns(#"Renamed Columns8",{"negative_charges", "c_lpep_pickup_datetime", "c_lpep_dropoff_datetime", "store_and_fwd_flag", "RatecodeID", "payment_type", "trip_type"}),
    #"Reordered Columns2" = Table.ReorderColumns(#"Removed Columns4",{"duration", "PULocationID", "DOLocationID", "passenger_count", "trip_distance", "fare_amount", "extra", "mta_tax", "tip_amount", "tolls_amount", "improvement_surcharge", "total_amount", "congestion_surcharge", "pickup_date", "dropoff_date", "pickup_time", "dropoff_time", "pickup_hour", "dropoff_hour"}),
    #"Removed Columns5" = Table.RemoveColumns(#"Reordered Columns2",{"duration"})
in
    #"Removed Columns5"